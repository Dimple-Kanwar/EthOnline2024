/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VehicleManagement,
  VehicleManagementInterface,
} from "../../contracts/VehicleManagement";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "vehicleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "model",
        type: "bytes32",
      },
    ],
    name: "VehicleRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "getVehicleByAccount",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "vehicleId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "model",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "purchaseDate",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "vin",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "color",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "plateNumber",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct VehicleManagement.Vehicle[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vehicleId",
        type: "uint256",
      },
    ],
    name: "getVehicleByVehicleId",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "vehicleId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "model",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "purchaseDate",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "vin",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "color",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "plateNumber",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct VehicleManagement.Vehicle",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "registerVehicle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userVehicleMap",
    outputs: [
      {
        internalType: "uint256",
        name: "vehicleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "purchaseDate",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vin",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "color",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "plateNumber",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vehicle",
    outputs: [
      {
        internalType: "uint256",
        name: "vehicleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "purchaseDate",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vin",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "color",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "plateNumber",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vehicles",
    outputs: [
      {
        internalType: "uint256",
        name: "vehicleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "purchaseDate",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vin",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "color",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "plateNumber",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a44806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806314df143214610067578063256fe235146100cb578063a39ab40e146100e0578063a718538514610142578063b8ba95fa14610157578063e3395a501461016a575b600080fd5b61007a6100753660046107cb565b61018a565b60408051998a526001600160a01b0390981660208a0152968801959095526060870193909352608086019190915260a085015260c084015260e0830152610100820152610120015b60405180910390f35b6100de6100d936600461080d565b6101fc565b005b61007a6100ee3660046108be565b60016020819052600091825260409091208054918101546002820154600383015460048401546005850154600686015460078701546008909701546001600160a01b03909616969495939492939192909189565b61014a610497565b6040516100c29190610936565b61007a6101653660046108be565b610560565b61017d6101783660046108be565b6105c5565b6040516100c29190610985565b600260205281600052604060002081815481106101a657600080fd5b60009182526020909120600990910201805460018201546002830154600384015460048501546005860154600687015460078801546008909801549699506001600160a01b039095169750929591949093919089565b60008060008060008060008060008980602001905181019061021e919061099a565b98509850985098509850985098509850985061023861064e565b898160000181815250508881602001906001600160a01b031690816001600160a01b031681525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e0018181525050818161010001818152505080600160008c81526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801559050506000600260008b6001600160a01b03166001600160a01b031681526020019081526020016000209050808290806001815401808255809150506001900390600052602060002090600902016000909190919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155505080600260008c6001600160a01b03166001600160a01b0316815260200190815260200160002090805461044492919061069a565b50604080516001600160a01b038c168152602081018b90528c917f92c1a1885217849327738d29f8df4013ed5e190e86dd6192a2260f60fe578d77910160405180910390a2505050505050505050505050565b336000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610557576000848152602090819020604080516101208101825260098602909201805483526001808201546001600160a01b0316848601526002820154928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e08401526008015461010083015290835290920191016104c6565b50505050905090565b6000818154811061057057600080fd5b60009182526020909120600990910201805460018201546002830154600384015460048501546005860154600687015460078801546008909801549698506001600160a01b0390951696939592949193909289565b6105cd61064e565b5060009081526001602081815260409283902083516101208101855281548152928101546001600160a01b0316918301919091526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260089091015461010082015290565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915290565b82805482825590600052602060002090600902810192821561074c5760005260206000209160090282015b8281111561074c578254825560018084015490830180546001600160a01b0319166001600160a01b0390921691909117905560028084015490830155600380840154908301556004808401549083015560058084015490830155600680840154908301556007808401549083015560088084015490830155600992830192909101906106c5565b5061075892915061075c565b5090565b5b808211156107585760008082556001820180546001600160a01b0319169055600282018190556003820181905560048201819055600582018190556006820181905560078201819055600882015560090161075d565b6001600160a01b03811681146107c857600080fd5b50565b600080604083850312156107de57600080fd5b82356107e9816107b3565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561081f57600080fd5b813567ffffffffffffffff8082111561083757600080fd5b818401915084601f83011261084b57600080fd5b81358181111561085d5761085d6107f7565b604051601f8201601f19908116603f01168101908382118183101715610885576108856107f7565b8160405282815287602084870101111561089e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156108d057600080fd5b5035919050565b805182526020808201516001600160a01b03169083015260408082015190830152606080820151908301526080808201519083015260a0808201519083015260c0808201519083015260e0808201519083015261010090810151910152565b6020808252825182820181905260009190848201906040850190845b81811015610979576109658385516108d7565b928401926101209290920191600101610952565b50909695505050505050565b610120810161099482846108d7565b92915050565b60008060008060008060008060006101208a8c0312156109b957600080fd5b8951985060208a01516109cb816107b3565b8098505060408a0151965060608a0151955060808a0151945060a08a0151935060c08a0151925060e08a015191506101008a01519050929598509295985092959856fea2646970667358221220976965cf2a3d5ebf5e27e2fc44298f41c727bb51a5a1c57ca22c3829bc2872c464736f6c63430008180033";

type VehicleManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VehicleManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VehicleManagement__factory extends ContractFactory {
  constructor(...args: VehicleManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VehicleManagement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VehicleManagement__factory {
    return super.connect(runner) as VehicleManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VehicleManagementInterface {
    return new Interface(_abi) as VehicleManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VehicleManagement {
    return new Contract(address, _abi, runner) as unknown as VehicleManagement;
  }
}
